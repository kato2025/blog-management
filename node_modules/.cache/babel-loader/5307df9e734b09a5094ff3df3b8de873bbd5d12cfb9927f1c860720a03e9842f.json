{"ast":null,"code":"var _jsxFileName = \"/Users/drnamuene/Documents/Training/Odin Project/Notes/Node/Projects/blog_app/blog-management/src/components/PostList.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport CommentList from './CommentList';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_BASE_URL = process.env.REACT_APP_API_BASE_URL;\nconst PostList = ({\n  posts,\n  onPostUpdated,\n  onPostDeleted\n}) => {\n  _s();\n  const [expandedPosts, setExpandedPosts] = useState([]);\n  const [editingPost, setEditingPost] = useState(null);\n  const [editValues, setEditValues] = useState({\n    title: '',\n    content: ''\n  });\n  const [commentCounts, setCommentCounts] = useState({}); // Stores number of comments per post\n\n  // Fetch comment counts for all posts\n  useEffect(() => {\n    const fetchCommentCounts = async () => {\n      try {\n        const response = await axios.get(`${API_BASE_URL}/comments/count`);\n        setCommentCounts(response.data); // Assuming response is { postId: commentCount }\n      } catch (error) {\n        console.error('Error fetching comment counts:', error);\n      }\n    };\n    fetchCommentCounts();\n  }, [posts]);\n\n  // Toggle comments visibility\n  const toggleComments = postId => {\n    setExpandedPosts(prevExpanded => prevExpanded.includes(postId) ? prevExpanded.filter(id => id !== postId) : [...prevExpanded, postId]);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"All Posts\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), posts.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No posts found.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }, this) : posts.map(post => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"post-card\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: post.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"post-content\",\n        dangerouslySetInnerHTML: {\n          __html: post.content\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"post-meta\",\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Author:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 15\n        }, this), \" \", post.authorId, \" | \", /*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Status:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 58\n        }, this), ' ', /*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            color: post.published ? 'var(--success-color)' : 'var(--danger-color)',\n            fontWeight: 'bold'\n          },\n          children: post.published ? 'Published' : 'Unpublished'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"comment-toggle-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"comment-count\",\n          children: [commentCounts[post.id] || 0, \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => toggleComments(post.id),\n          className: \"comment-toggle-btn\",\n          children: expandedPosts.includes(post.id) ? '—' : '+'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"comment-toggle-text\",\n          children: expandedPosts.includes(post.id) ? 'Hide comments' : 'Show comments'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 13\n      }, this), expandedPosts.includes(post.id) && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"comment-list\",\n        children: /*#__PURE__*/_jsxDEV(CommentList, {\n          postId: post.id\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 15\n      }, this)]\n    }, post.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 11\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n};\n_s(PostList, \"QBdZ2PtLcPIKSseuyJOg/qRrbeA=\");\n_c = PostList;\nexport default PostList;\nvar _c;\n$RefreshReg$(_c, \"PostList\");","map":{"version":3,"names":["React","useState","useEffect","axios","CommentList","jsxDEV","_jsxDEV","API_BASE_URL","process","env","REACT_APP_API_BASE_URL","PostList","posts","onPostUpdated","onPostDeleted","_s","expandedPosts","setExpandedPosts","editingPost","setEditingPost","editValues","setEditValues","title","content","commentCounts","setCommentCounts","fetchCommentCounts","response","get","data","error","console","toggleComments","postId","prevExpanded","includes","filter","id","children","fileName","_jsxFileName","lineNumber","columnNumber","length","map","post","className","dangerouslySetInnerHTML","__html","authorId","style","color","published","fontWeight","onClick","_c","$RefreshReg$"],"sources":["/Users/drnamuene/Documents/Training/Odin Project/Notes/Node/Projects/blog_app/blog-management/src/components/PostList.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport CommentList from './CommentList';\n\nconst API_BASE_URL = process.env.REACT_APP_API_BASE_URL;\n\nconst PostList = ({ posts, onPostUpdated, onPostDeleted }) => {\n  const [expandedPosts, setExpandedPosts] = useState([]);\n  const [editingPost, setEditingPost] = useState(null);\n  const [editValues, setEditValues] = useState({ title: '', content: '' });\n  const [commentCounts, setCommentCounts] = useState({}); // Stores number of comments per post\n\n  // Fetch comment counts for all posts\n  useEffect(() => {\n    const fetchCommentCounts = async () => {\n      try {\n        const response = await axios.get(`${API_BASE_URL}/comments/count`);\n        setCommentCounts(response.data); // Assuming response is { postId: commentCount }\n      } catch (error) {\n        console.error('Error fetching comment counts:', error);\n      }\n    };\n\n    fetchCommentCounts();\n  }, [posts]);\n\n  // Toggle comments visibility\n  const toggleComments = (postId) => {\n    setExpandedPosts((prevExpanded) =>\n      prevExpanded.includes(postId)\n        ? prevExpanded.filter((id) => id !== postId)\n        : [...prevExpanded, postId]\n    );\n  };\n\n  return (\n    <div>\n      <h2>All Posts</h2>\n      {posts.length === 0 ? (\n        <p>No posts found.</p>\n      ) : (\n        posts.map((post) => (\n          <div key={post.id} className=\"post-card\">\n            <h3>{post.title}</h3>\n            <div className=\"post-content\" dangerouslySetInnerHTML={{ __html: post.content }} />\n            <p className=\"post-meta\">\n              <strong>Author:</strong> {post.authorId} | <strong>Status:</strong>{' '}\n              <span\n                style={{\n                  color: post.published ? 'var(--success-color)' : 'var(--danger-color)',\n                  fontWeight: 'bold'\n                }}\n              >\n                {post.published ? 'Published' : 'Unpublished'}\n              </span>\n            </p>\n\n            {/* Comment Toggle with Count */}\n            <div className=\"comment-toggle-container\">\n              <span className=\"comment-count\">\n                {commentCounts[post.id] || 0} {/* Show actual number of comments */}\n              </span>\n              <button onClick={() => toggleComments(post.id)} className=\"comment-toggle-btn\">\n                {expandedPosts.includes(post.id) ? '—' : '+'}\n              </button>\n              <span className=\"comment-toggle-text\">\n                {expandedPosts.includes(post.id) ? 'Hide comments' : 'Show comments'}\n              </span>\n            </div>\n\n            {/* Render comments if expanded */}\n            {expandedPosts.includes(post.id) && (\n              <div className=\"comment-list\">\n                <CommentList postId={post.id} />\n              </div>\n            )}\n          </div>\n        ))\n      )}\n    </div>\n  );\n};\n\nexport default PostList;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}