{"ast":null,"code":"var _jsxFileName = \"/Users/drnamuene/Documents/Training/Odin Project/Notes/Node/Projects/blog_app/blog-management/src/context/AuthContext.js\",\n  _s = $RefreshSig$();\nimport React, { createContext, useState, useEffect, useCallback } from \"react\";\nimport axios from \"axios\";\nimport { jwtDecode } from \"jwt-decode\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_BASE_URL = process.env.REACT_APP_API_BASE_URL;\nconst AuthContext = /*#__PURE__*/createContext();\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [user, setUser] = useState(null);\n  const [token, setToken] = useState(localStorage.getItem(\"token\") || null);\n  const isTokenExpired = token => {\n    if (!token) return true;\n    try {\n      const decoded = jwtDecode(token);\n      const currentTime = Date.now() / 1000; // Convert to seconds\n      return decoded.exp < currentTime;\n    } catch (error) {\n      console.error(\"Error decoding token:\", error);\n      return true; // Assume expired if decoding fails\n    }\n  };\n  const logout = () => {\n    localStorage.removeItem(\"token\");\n    setToken(null);\n    setUser(null);\n  };\n  const refreshToken = useCallback(async () => {\n    if (!token || isTokenExpired(token)) {\n      console.log(\"Token expired or not found, attempting refresh.\");\n      try {\n        const response = await axios.post(`${API_BASE_URL}/auth/refresh`, null, {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        const newToken = response.data.token;\n        localStorage.setItem(\"token\", newToken);\n        setToken(newToken);\n        return newToken;\n      } catch (error) {\n        console.error(\"Token refresh failed:\", error);\n        logout();\n        throw new Error(\"Session expired. Please log in again.\");\n      }\n    }\n    return token;\n  }, [token]);\n  const fetchUser = useCallback(async () => {\n    if (!token) {\n      console.log(\"No token found.\");\n      return;\n    }\n    if (isTokenExpired(token)) {\n      await refreshToken(); // Refresh token if expired\n    }\n    try {\n      const response = await axios.get(`${API_BASE_URL}/auth/me`, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      console.log(\"User fetched:\", response.data);\n      setUser(response.data);\n    } catch (error) {\n      console.error(\"Error fetching user:\", error);\n      logout();\n    }\n  }, [token, refreshToken]);\n  useEffect(() => {\n    fetchUser();\n  }, [fetchUser]);\n  const login = async credentials => {\n    try {\n      const response = await axios.post(`${API_BASE_URL}/login`, credentials);\n      const {\n        token\n      } = response.data;\n      localStorage.setItem(\"token\", token);\n      setToken(token);\n      const decoded = jwtDecode(token);\n      setUser(decoded); // Set initial user from token\n\n      await fetchUser(); // Fetch full user details\n    } catch (error) {\n      var _error$response, _error$response$data;\n      throw new Error(((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.error) || \"Login failed\");\n    }\n  };\n\n  // Axios interceptor to handle 401 errors globally\n  useEffect(() => {\n    const interceptor = axios.interceptors.response.use(response => response, async error => {\n      var _error$response2;\n      if (((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : _error$response2.status) === 401) {\n        try {\n          const newToken = await refreshToken();\n          error.config.headers.Authorization = `Bearer ${newToken}`;\n          return axios(error.config); // Retry the original request\n        } catch (refreshError) {\n          console.error(\"Refresh failed, logging out:\", refreshError);\n          logout();\n          return Promise.reject(refreshError);\n        }\n      }\n      return Promise.reject(error);\n    });\n    return () => axios.interceptors.response.eject(interceptor); // Cleanup\n  }, [refreshToken]);\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      user,\n      token,\n      login,\n      logout,\n      refreshToken\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 116,\n    columnNumber: 5\n  }, this);\n};\n_s(AuthProvider, \"PjdcTC4J3lH4Tzawm8LMZFjitt8=\");\n_c = AuthProvider;\nexport default AuthContext;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useState","useEffect","useCallback","axios","jwtDecode","jsxDEV","_jsxDEV","API_BASE_URL","process","env","REACT_APP_API_BASE_URL","AuthContext","AuthProvider","children","_s","user","setUser","token","setToken","localStorage","getItem","isTokenExpired","decoded","currentTime","Date","now","exp","error","console","logout","removeItem","refreshToken","log","response","post","headers","Authorization","newToken","data","setItem","Error","fetchUser","get","login","credentials","_error$response","_error$response$data","interceptor","interceptors","use","_error$response2","status","config","refreshError","Promise","reject","eject","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/drnamuene/Documents/Training/Odin Project/Notes/Node/Projects/blog_app/blog-management/src/context/AuthContext.js"],"sourcesContent":["import React, { createContext, useState, useEffect, useCallback } from \"react\";\nimport axios from \"axios\";\nimport { jwtDecode } from \"jwt-decode\";\n\nconst API_BASE_URL = process.env.REACT_APP_API_BASE_URL;\nconst AuthContext = createContext();\n\nexport const AuthProvider = ({ children }) => {\n  const [user, setUser] = useState(null);\n  const [token, setToken] = useState(localStorage.getItem(\"token\") || null);\n\n  const isTokenExpired = (token) => {\n    if (!token) return true;\n    try {\n      const decoded = jwtDecode(token);\n      const currentTime = Date.now() / 1000; // Convert to seconds\n      return decoded.exp < currentTime;\n    } catch (error) {\n      console.error(\"Error decoding token:\", error);\n      return true; // Assume expired if decoding fails\n    }\n  };\n\n  const logout = () => {\n    localStorage.removeItem(\"token\");\n    setToken(null);\n    setUser(null);\n  };\n\n  const refreshToken = useCallback(async () => {\n    if (!token || isTokenExpired(token)) {\n      console.log(\"Token expired or not found, attempting refresh.\");\n      try {\n        const response = await axios.post(`${API_BASE_URL}/auth/refresh`, null, {\n          headers: { Authorization: `Bearer ${token}` },\n        });\n        const newToken = response.data.token;\n        localStorage.setItem(\"token\", newToken);\n        setToken(newToken);\n        return newToken;\n      } catch (error) {\n        console.error(\"Token refresh failed:\", error);\n        logout();\n        throw new Error(\"Session expired. Please log in again.\");\n      }\n    }\n    return token;\n  }, [token]);\n\n  const fetchUser = useCallback(async () => {\n    if (!token) {\n      console.log(\"No token found.\");\n      return;\n    }\n\n    if (isTokenExpired(token)) {\n      await refreshToken(); // Refresh token if expired\n    }\n\n    try {\n      const response = await axios.get(`${API_BASE_URL}/auth/me`, {\n        headers: { Authorization: `Bearer ${token}` },\n      });\n      console.log(\"User fetched:\", response.data);\n      setUser(response.data);\n    } catch (error) {\n      console.error(\"Error fetching user:\", error);\n      logout();\n    }\n  }, [token, refreshToken]);\n\n  useEffect(() => {\n    fetchUser();\n  }, [fetchUser]);\n\n  const login = async (credentials) => {\n    try {\n      const response = await axios.post(`${API_BASE_URL}/login`, credentials);\n      const { token } = response.data;\n\n      localStorage.setItem(\"token\", token);\n      setToken(token);\n\n      const decoded = jwtDecode(token);\n      setUser(decoded); // Set initial user from token\n\n      await fetchUser(); // Fetch full user details\n    } catch (error) {\n      throw new Error(error.response?.data?.error || \"Login failed\");\n    }\n  };\n\n  // Axios interceptor to handle 401 errors globally\n  useEffect(() => {\n    const interceptor = axios.interceptors.response.use(\n      (response) => response,\n      async (error) => {\n        if (error.response?.status === 401) {\n          try {\n            const newToken = await refreshToken();\n            error.config.headers.Authorization = `Bearer ${newToken}`;\n            return axios(error.config); // Retry the original request\n          } catch (refreshError) {\n            console.error(\"Refresh failed, logging out:\", refreshError);\n            logout();\n            return Promise.reject(refreshError);\n          }\n        }\n        return Promise.reject(error);\n      }\n    );\n    return () => axios.interceptors.response.eject(interceptor); // Cleanup\n  }, [refreshToken]);\n\n  return (\n    <AuthContext.Provider value={{ user, token, login, logout, refreshToken }}>\n      {children}\n    </AuthContext.Provider>\n  );\n};\n\nexport default AuthContext;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}