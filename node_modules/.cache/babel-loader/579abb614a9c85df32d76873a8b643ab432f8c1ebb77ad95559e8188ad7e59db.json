{"ast":null,"code":"var _jsxFileName = \"/Users/drnamuene/Documents/Training/Odin Project/Notes/Node/Projects/blog_app/blog-management/src/components/PostList.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport CommentList from './CommentList';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst API_BASE_URL = process.env.REACT_APP_API_BASE_URL;\nconst PostList = ({\n  posts,\n  onPostUpdated,\n  onPostDeleted\n}) => {\n  _s();\n  // State to track which posts have expanded comments.\n  const [expandedPosts, setExpandedPosts] = useState([]);\n  // State to track which post is in edit mode along with its updated values.\n  const [editingPost, setEditingPost] = useState(null);\n  const [editValues, setEditValues] = useState({\n    title: '',\n    content: ''\n  });\n\n  // Toggle published/unpublished status.\n  const togglePublishStatus = async (postId, published) => {\n    try {\n      await axios.put(`${API_BASE_URL}/posts/${postId}`, {\n        published: !published\n      });\n      onPostUpdated(postId, {\n        published: !published\n      });\n    } catch (error) {\n      console.error('Error updating post:', error);\n      alert('Failed to update post status.');\n    }\n  };\n\n  // Toggle the expansion of comments for a specific post.\n  const toggleComments = postId => {\n    setExpandedPosts(prevExpanded => prevExpanded.includes(postId) ? prevExpanded.filter(id => id !== postId) : [...prevExpanded, postId]);\n  };\n\n  // Enable edit mode for a post.\n  const handleEditClick = post => {\n    setEditingPost(post.id);\n    setEditValues({\n      title: post.title,\n      content: post.content\n    });\n  };\n\n  // Cancel editing.\n  const cancelEdit = () => {\n    setEditingPost(null);\n    setEditValues({\n      title: '',\n      content: ''\n    });\n  };\n\n  // Handle changes in the edit form.\n  const handleEditChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setEditValues(prev => ({\n      ...prev,\n      [name]: value\n    }));\n  };\n\n  // Submit updated post data.\n  const handleEditSubmit = async (e, postId) => {\n    e.preventDefault();\n    try {\n      const response = await axios.put(`${API_BASE_URL}/posts/${postId}`, {\n        title: editValues.title,\n        content: editValues.content\n      });\n      onPostUpdated(postId, response.data);\n      setEditingPost(null);\n      setEditValues({\n        title: '',\n        content: ''\n      });\n    } catch (error) {\n      console.error('Error updating post:', error);\n      alert('Failed to update post.');\n    }\n  };\n\n  // Delete the post with a confirmation warning.\n  const handleDelete = async postId => {\n    try {\n      // Fetch the post details to check if it has any comments\n      const response = await axios.get(`${API_BASE_URL}/posts/${postId}`);\n      const post = response.data;\n\n      // If the post has comments, show the custom warning message\n      if (post.comments && post.comments.length > 0) {\n        const confirmDelete = window.confirm('You cannot delete this post because it has related comments. If you still want to delete this post, please delete the comments first.');\n        if (!confirmDelete) return;\n      } else {\n        // If no comments, proceed with deletion directly\n        const confirmDelete = window.confirm('Are you sure you want to delete this post? This action cannot be undone.');\n        if (!confirmDelete) return;\n      }\n\n      // Proceed with the deletion by calling the backend API\n      const deleteResponse = await axios.delete(`${API_BASE_URL}/posts/${postId}`);\n\n      // If the deletion is successful, update the UI\n      if (deleteResponse.status === 204) {\n        onPostDeleted(postId); // Call the callback to update UI after deletion\n      } else {\n        alert('Failed to delete post. Please try again.');\n      }\n    } catch (error) {\n      console.error('Error deleting post:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"All Posts\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }, this), posts.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No posts found.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 9\n    }, this) : posts.map(post => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"post-card\",\n      children: editingPost === post.id ?\n      /*#__PURE__*/\n      // Inline edit form.\n      _jsxDEV(\"form\", {\n        onSubmit: e => handleEditSubmit(e, post.id),\n        className: \"post-edit-form\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Title:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"title\",\n            value: editValues.title,\n            onChange: handleEditChange,\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Content:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n            name: \"content\",\n            value: editValues.content,\n            onChange: handleEditChange,\n            rows: \"5\",\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"btn\",\n          children: \"Save\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          className: \"btn\",\n          onClick: cancelEdit,\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 15\n      }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: post.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"post-content\",\n          dangerouslySetInnerHTML: {\n            __html: post.content\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"post-meta\",\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Author:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 143,\n            columnNumber: 19\n          }, this), \" \", post.authorId, \" | \", /*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Status:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 143,\n            columnNumber: 62\n          }, this), ' ', /*#__PURE__*/_jsxDEV(\"span\", {\n            style: {\n              color: post.published ? 'var(--success-color)' : 'var(--danger-color)',\n              fontWeight: 'bold'\n            },\n            children: post.published ? 'Published' : 'Unpublished'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => togglePublishStatus(post.id, post.published),\n          className: post.published ? 'btn btn-unpublish' : 'btn btn-publish',\n          children: post.published ? 'Unpublish' : 'Publish'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleEditClick(post),\n          className: \"btn btn-edit\",\n          children: \"Edit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleDelete(post.id),\n          className: \"btn btn-delete\",\n          children: \"Delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"comment-toggle-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"comment-count\",\n            children: [\"Comments \", post.comments ? post.comments.length : 0]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 171,\n            columnNumber: 19\n          }, this), post.comments && post.comments.length > 0 && /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => toggleComments(post.id),\n            className: \"comment-toggle-btn\",\n            children: expandedPosts.includes(post.id) ? 'Hide' : 'Show'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 177,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 17\n        }, this), expandedPosts.includes(post.id) && post.comments && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"comment-list\",\n          children: /*#__PURE__*/_jsxDEV(CommentList, {\n            postId: post.id\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 186,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 19\n        }, this)]\n      }, void 0, true)\n    }, post.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 11\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 105,\n    columnNumber: 5\n  }, this);\n};\n_s(PostList, \"NwnnQjh9jTa5hWWQt8Hww3E3I+g=\");\n_c = PostList;\nexport default PostList;\nvar _c;\n$RefreshReg$(_c, \"PostList\");","map":{"version":3,"names":["React","useState","axios","CommentList","jsxDEV","_jsxDEV","Fragment","_Fragment","API_BASE_URL","process","env","REACT_APP_API_BASE_URL","PostList","posts","onPostUpdated","onPostDeleted","_s","expandedPosts","setExpandedPosts","editingPost","setEditingPost","editValues","setEditValues","title","content","togglePublishStatus","postId","published","put","error","console","alert","toggleComments","prevExpanded","includes","filter","id","handleEditClick","post","cancelEdit","handleEditChange","e","name","value","target","prev","handleEditSubmit","preventDefault","response","data","handleDelete","get","comments","length","confirmDelete","window","confirm","deleteResponse","delete","status","children","fileName","_jsxFileName","lineNumber","columnNumber","map","className","onSubmit","type","onChange","required","rows","onClick","dangerouslySetInnerHTML","__html","authorId","style","color","fontWeight","_c","$RefreshReg$"],"sources":["/Users/drnamuene/Documents/Training/Odin Project/Notes/Node/Projects/blog_app/blog-management/src/components/PostList.js"],"sourcesContent":["import React, { useState } from 'react';\nimport axios from 'axios';\nimport CommentList from './CommentList';\n\nconst API_BASE_URL = process.env.REACT_APP_API_BASE_URL;\n\nconst PostList = ({ posts, onPostUpdated, onPostDeleted }) => {\n  // State to track which posts have expanded comments.\n  const [expandedPosts, setExpandedPosts] = useState([]);\n  // State to track which post is in edit mode along with its updated values.\n  const [editingPost, setEditingPost] = useState(null);\n  const [editValues, setEditValues] = useState({ title: '', content: '' });\n\n  // Toggle published/unpublished status.\n  const togglePublishStatus = async (postId, published) => {\n    try {\n      await axios.put(`${API_BASE_URL}/posts/${postId}`, { published: !published });\n      onPostUpdated(postId, { published: !published });\n    } catch (error) {\n      console.error('Error updating post:', error);\n      alert('Failed to update post status.');\n    }\n  };\n\n  // Toggle the expansion of comments for a specific post.\n  const toggleComments = (postId) => {\n    setExpandedPosts((prevExpanded) =>\n      prevExpanded.includes(postId)\n        ? prevExpanded.filter((id) => id !== postId)\n        : [...prevExpanded, postId]\n    );\n  };\n\n  // Enable edit mode for a post.\n  const handleEditClick = (post) => {\n    setEditingPost(post.id);\n    setEditValues({ title: post.title, content: post.content });\n  };\n\n  // Cancel editing.\n  const cancelEdit = () => {\n    setEditingPost(null);\n    setEditValues({ title: '', content: '' });\n  };\n\n  // Handle changes in the edit form.\n  const handleEditChange = (e) => {\n    const { name, value } = e.target;\n    setEditValues((prev) => ({ ...prev, [name]: value }));\n  };\n\n  // Submit updated post data.\n  const handleEditSubmit = async (e, postId) => {\n    e.preventDefault();\n    try {\n      const response = await axios.put(`${API_BASE_URL}/posts/${postId}`, {\n        title: editValues.title,\n        content: editValues.content,\n      });\n      onPostUpdated(postId, response.data);\n      setEditingPost(null);\n      setEditValues({ title: '', content: '' });\n    } catch (error) {\n      console.error('Error updating post:', error);\n      alert('Failed to update post.');\n    }\n  };\n\n  // Delete the post with a confirmation warning.\n  const handleDelete = async (postId) => {\n    try {\n      // Fetch the post details to check if it has any comments\n      const response = await axios.get(`${API_BASE_URL}/posts/${postId}`);\n      const post = response.data;\n  \n      // If the post has comments, show the custom warning message\n      if (post.comments && post.comments.length > 0) {\n        const confirmDelete = window.confirm(\n          'You cannot delete this post because it has related comments. If you still want to delete this post, please delete the comments first.'\n        );\n        if (!confirmDelete) return;\n      } else {\n        // If no comments, proceed with deletion directly\n        const confirmDelete = window.confirm(\n          'Are you sure you want to delete this post? This action cannot be undone.'\n        );\n        if (!confirmDelete) return;\n      }\n  \n      // Proceed with the deletion by calling the backend API\n      const deleteResponse = await axios.delete(`${API_BASE_URL}/posts/${postId}`);\n  \n      // If the deletion is successful, update the UI\n      if (deleteResponse.status === 204) {\n        onPostDeleted(postId); // Call the callback to update UI after deletion\n      } else {\n        alert('Failed to delete post. Please try again.');\n      }\n    } catch (error) {\n      console.error('Error deleting post:', error);\n    }\n  };  \n\n  return (\n    <div>\n      <h2>All Posts</h2>\n      {posts.length === 0 ? (\n        <p>No posts found.</p>\n      ) : (\n        posts.map((post) => (\n          <div key={post.id} className=\"post-card\">\n            {editingPost === post.id ? (\n              // Inline edit form.\n              <form onSubmit={(e) => handleEditSubmit(e, post.id)} className=\"post-edit-form\">\n                <div>\n                  <label>Title:</label>\n                  <input\n                    type=\"text\"\n                    name=\"title\"\n                    value={editValues.title}\n                    onChange={handleEditChange}\n                    required\n                  />\n                </div>\n                <div>\n                  <label>Content:</label>\n                  <textarea\n                    name=\"content\"\n                    value={editValues.content}\n                    onChange={handleEditChange}\n                    rows=\"5\"\n                    required\n                  ></textarea>\n                </div>\n                <button type=\"submit\" className=\"btn\">Save</button>\n                <button type=\"button\" className=\"btn\" onClick={cancelEdit}>Cancel</button>\n              </form>\n            ) : (\n              <>\n                <h3>{post.title}</h3>\n                <div className=\"post-content\" dangerouslySetInnerHTML={{ __html: post.content }} />\n                <p className=\"post-meta\">\n                  <strong>Author:</strong> {post.authorId} | <strong>Status:</strong>{' '}\n                  <span\n                    style={{\n                      color: post.published ? 'var(--success-color)' : 'var(--danger-color)',\n                      fontWeight: 'bold'\n                    }}\n                  >\n                    {post.published ? 'Published' : 'Unpublished'}\n                  </span>\n                </p>\n                {/* Publish/Unpublish button */}\n                <button\n                  onClick={() => togglePublishStatus(post.id, post.published)}\n                  className={post.published ? 'btn btn-unpublish' : 'btn btn-publish'}\n                >\n                  {post.published ? 'Unpublish' : 'Publish'}\n                </button>\n                {/* Edit button */}\n                <button onClick={() => handleEditClick(post)} className=\"btn btn-edit\">\n                  Edit\n                </button>\n                {/* Delete button */}\n                <button onClick={() => handleDelete(post.id)} className=\"btn btn-delete\">\n                  Delete\n                </button>\n\n                {/* Button to toggle comment visibility */}\n                <div className=\"comment-toggle-container\">\n                  <span className=\"comment-count\">\n                    Comments {post.comments ? post.comments.length : 0}\n                  </span>\n\n                  {/* Only show the toggle button if there are comments */}\n                  {post.comments && post.comments.length > 0 && (\n                    <button onClick={() => toggleComments(post.id)} className=\"comment-toggle-btn\">\n                      {expandedPosts.includes(post.id) ? 'Hide' : 'Show'}\n                    </button>\n                  )}\n                </div>\n\n                {/* Render comments if the post is expanded */}\n                {expandedPosts.includes(post.id) && post.comments && (\n                  <div className=\"comment-list\">\n                    <CommentList postId={post.id} />\n                  </div>\n                )}\n              </>\n            )}\n          </div>\n        ))\n      )}\n    </div>\n  );\n};\n\nexport default PostList;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}