{"ast":null,"code":"var _jsxFileName = \"/Users/drnamuene/Documents/Training/Odin Project/Notes/Node/Projects/blog_app/blog-management/src/components/PostForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useContext } from 'react';\nimport axios from 'axios';\nimport { Editor } from '@tinymce/tinymce-react';\nimport AuthContext from '../context/AuthContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_BASE_URL = process.env.REACT_APP_API_BASE_URL;\nconst TINYMCE_API_KEY = process.env.REACT_APP_TINYMCE_API_KEY;\nconst PostForm = ({\n  onPostCreated\n}) => {\n  _s();\n  const {\n    token,\n    user\n  } = useContext(AuthContext);\n  const [title, setTitle] = useState('');\n  const [content, setContent] = useState('');\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (!token || !user) {\n      alert(\"❌ You are not authenticated. Please log in.\");\n      return;\n    }\n    if (!title.trim() || !content.trim()) {\n      alert(\"❌ Title and content cannot be empty.\");\n      return;\n    }\n    try {\n      const response = await axios.post(`${API_BASE_URL}/posts`, {\n        title,\n        content,\n        authorId: user.id,\n        published: false\n      }, {\n        headers: {\n          Authorization: `Bearer ${token}`,\n          'Content-Type': 'application/json'\n        }\n      });\n      console.log(\"✅ Post created successfully:\", response.data);\n      alert(\"✅ Post created successfully!\");\n      setTitle('');\n      setContent('');\n\n      // Notify via callback if provided\n      if (onPostCreated) {\n        onPostCreated(response.data);\n      }\n\n      // Dispatch a custom event to signal a new post was created\n      const newPostEvent = new CustomEvent(\"newPostCreated\", {\n        detail: response.data\n      });\n      window.dispatchEvent(newPostEvent);\n    } catch (error) {\n      console.error(\"❌ Full Error Object:\", error);\n      if (error.response) {\n        var _error$response$data;\n        console.error(\"❌ Error Response:\", error.response);\n        const errorMessage = ((_error$response$data = error.response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.message) || \"Unknown error\";\n        alert(`❌ Failed to create post: ${errorMessage}`);\n      } else {\n        alert(\"❌ Failed to create post: Unknown error\");\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Create a New Post\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Title:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: title,\n        onChange: e => setTitle(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Content:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Editor, {\n        apiKey: TINYMCE_API_KEY,\n        value: content,\n        onEditorChange: newContent => setContent(newContent),\n        init: {\n          height: 300,\n          menubar: false,\n          plugins: 'link image code',\n          toolbar: 'undo redo | formatselect | bold italic | alignleft aligncenter alignright | code'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"Create Post\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 5\n  }, this);\n};\n_s(PostForm, \"Qww9ptdiAzr/wIVg73suPkY70/8=\");\n_c = PostForm;\nexport default PostForm;\nvar _c;\n$RefreshReg$(_c, \"PostForm\");","map":{"version":3,"names":["React","useState","useContext","axios","Editor","AuthContext","jsxDEV","_jsxDEV","API_BASE_URL","process","env","REACT_APP_API_BASE_URL","TINYMCE_API_KEY","REACT_APP_TINYMCE_API_KEY","PostForm","onPostCreated","_s","token","user","title","setTitle","content","setContent","handleSubmit","e","preventDefault","alert","trim","response","post","authorId","id","published","headers","Authorization","console","log","data","newPostEvent","CustomEvent","detail","window","dispatchEvent","error","_error$response$data","errorMessage","message","onSubmit","children","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","target","required","apiKey","onEditorChange","newContent","init","height","menubar","plugins","toolbar","_c","$RefreshReg$"],"sources":["/Users/drnamuene/Documents/Training/Odin Project/Notes/Node/Projects/blog_app/blog-management/src/components/PostForm.js"],"sourcesContent":["import React, { useState, useContext } from 'react';\nimport axios from 'axios';\nimport { Editor } from '@tinymce/tinymce-react';\nimport AuthContext from '../context/AuthContext';\n\nconst API_BASE_URL = process.env.REACT_APP_API_BASE_URL;\nconst TINYMCE_API_KEY = process.env.REACT_APP_TINYMCE_API_KEY;\n\nconst PostForm = ({ onPostCreated }) => {\n  const { token, user } = useContext(AuthContext);\n  const [title, setTitle] = useState('');\n  const [content, setContent] = useState('');\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n\n    if (!token || !user) {\n      alert(\"❌ You are not authenticated. Please log in.\");\n      return;\n    }\n\n    if (!title.trim() || !content.trim()) {\n      alert(\"❌ Title and content cannot be empty.\");\n      return;\n    }\n\n    try {\n      const response = await axios.post(\n        `${API_BASE_URL}/posts`,\n        {\n          title,\n          content,\n          authorId: user.id,\n          published: false,\n        },\n        {\n          headers: {\n            Authorization: `Bearer ${token}`,\n            'Content-Type': 'application/json',\n          },\n        }\n      );\n\n      console.log(\"✅ Post created successfully:\", response.data);\n      alert(\"✅ Post created successfully!\");\n\n      setTitle('');\n      setContent('');\n\n      // Notify via callback if provided\n      if (onPostCreated) {\n        onPostCreated(response.data);\n      }\n      \n      // Dispatch a custom event to signal a new post was created\n      const newPostEvent = new CustomEvent(\"newPostCreated\", { detail: response.data });\n      window.dispatchEvent(newPostEvent);\n      \n    } catch (error) {\n      console.error(\"❌ Full Error Object:\", error);\n\n      if (error.response) {\n        console.error(\"❌ Error Response:\", error.response);\n        const errorMessage = error.response.data?.message || \"Unknown error\";\n        alert(`❌ Failed to create post: ${errorMessage}`);\n      } else {\n        alert(\"❌ Failed to create post: Unknown error\");\n      }\n    }\n  };\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <h3>Create a New Post</h3>\n      <div>\n        <label>Title:</label>\n        <input\n          type=\"text\"\n          value={title}\n          onChange={(e) => setTitle(e.target.value)}\n          required\n        />\n      </div>\n      <div>\n        <label>Content:</label>\n        <Editor\n          apiKey={TINYMCE_API_KEY}\n          value={content}\n          onEditorChange={(newContent) => setContent(newContent)}\n          init={{\n            height: 300,\n            menubar: false,\n            plugins: 'link image code',\n            toolbar: 'undo redo | formatselect | bold italic | alignleft aligncenter alignright | code',\n          }}\n        />\n      </div>\n      <button type=\"submit\">Create Post</button>\n    </form>\n  );\n};\n\nexport default PostForm;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}