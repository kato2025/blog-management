{"ast":null,"code":"var _jsxFileName = \"/Users/drnamuene/Documents/Training/Odin Project/Notes/Node/Projects/blog_app/blog-management/src/components/PostForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useContext } from 'react';\nimport axios from 'axios';\nimport { Editor } from '@tinymce/tinymce-react';\nimport AuthContext from '../context/AuthContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_BASE_URL = process.env.REACT_APP_API_BASE_URL;\nconst TINYMCE_API_KEY = process.env.REACT_APP_TINYMCE_API_KEY;\nconst PostForm = ({\n  onPostCreated\n}) => {\n  _s();\n  const {\n    token,\n    user\n  } = useContext(AuthContext);\n  const [title, setTitle] = useState('');\n  const [content, setContent] = useState('');\n  const handleSubmit = async e => {\n    e.preventDefault();\n\n    // Debugging: Log token, user, and API base URL\n    console.log(\"üîç Token:\", token);\n    console.log(\"üîç User:\", user);\n    console.log(\"üîç API Base URL:\", API_BASE_URL);\n\n    // Ensure the user is authenticated before attempting to create a post\n    if (!token || !user) {\n      alert(\"‚ùå You are not authenticated. Please log in.\");\n      return;\n    }\n\n    // Validate that title and content are not empty\n    if (!title.trim() || !content.trim()) {\n      alert(\"‚ùå Title and content cannot be empty.\");\n      return;\n    }\n    try {\n      // Send the post request to the backend\n      const response = await axios.post(`${API_BASE_URL}/posts`, {\n        title,\n        content,\n        authorId: user.id\n      }, {\n        headers: {\n          Authorization: `Bearer ${token}`,\n          'Content-Type': 'application/json'\n        }\n      });\n\n      // Success: Log response data\n      console.log(\"‚úÖ Post created successfully:\", response.data);\n      alert(\"‚úÖ Post created successfully!\");\n      setTitle('');\n      setContent('');\n      if (onPostCreated) onPostCreated(response.data);\n    } catch (error) {\n      var _error$response, _error$response$data;\n      // Debugging: Log full error object and response data\n      console.error(\"‚ùå Full Error Object:\", error);\n      console.error(\"‚ùå Error Response:\", error.response);\n      alert(`‚ùå Failed to create post: ${((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.message) || error.message || \"Unknown error\"}`);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Create a New Post\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Title:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: title,\n        onChange: e => setTitle(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Content:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Editor, {\n        apiKey: TINYMCE_API_KEY,\n        value: content,\n        onEditorChange: newContent => setContent(newContent),\n        init: {\n          height: 300,\n          menubar: false,\n          plugins: 'link image code',\n          toolbar: 'undo redo | formatselect | bold italic | alignleft aligncenter alignright | code'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"Create Post\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 5\n  }, this);\n};\n_s(PostForm, \"Qww9ptdiAzr/wIVg73suPkY70/8=\");\n_c = PostForm;\nexport default PostForm;\nvar _c;\n$RefreshReg$(_c, \"PostForm\");","map":{"version":3,"names":["React","useState","useContext","axios","Editor","AuthContext","jsxDEV","_jsxDEV","API_BASE_URL","process","env","REACT_APP_API_BASE_URL","TINYMCE_API_KEY","REACT_APP_TINYMCE_API_KEY","PostForm","onPostCreated","_s","token","user","title","setTitle","content","setContent","handleSubmit","e","preventDefault","console","log","alert","trim","response","post","authorId","id","headers","Authorization","data","error","_error$response","_error$response$data","message","onSubmit","children","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","target","required","apiKey","onEditorChange","newContent","init","height","menubar","plugins","toolbar","_c","$RefreshReg$"],"sources":["/Users/drnamuene/Documents/Training/Odin Project/Notes/Node/Projects/blog_app/blog-management/src/components/PostForm.js"],"sourcesContent":["import React, { useState, useContext } from 'react';\nimport axios from 'axios';\nimport { Editor } from '@tinymce/tinymce-react';\nimport AuthContext from '../context/AuthContext';\n\nconst API_BASE_URL = process.env.REACT_APP_API_BASE_URL;\nconst TINYMCE_API_KEY = process.env.REACT_APP_TINYMCE_API_KEY;\n\nconst PostForm = ({ onPostCreated }) => {\n  const { token, user } = useContext(AuthContext);\n  const [title, setTitle] = useState('');\n  const [content, setContent] = useState('');\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n\n    // Debugging: Log token, user, and API base URL\n    console.log(\"üîç Token:\", token);\n    console.log(\"üîç User:\", user);\n    console.log(\"üîç API Base URL:\", API_BASE_URL);\n\n    // Ensure the user is authenticated before attempting to create a post\n    if (!token || !user) {\n      alert(\"‚ùå You are not authenticated. Please log in.\");\n      return;\n    }\n\n    // Validate that title and content are not empty\n    if (!title.trim() || !content.trim()) {\n      alert(\"‚ùå Title and content cannot be empty.\");\n      return;\n    }\n\n    try {\n      // Send the post request to the backend\n      const response = await axios.post(\n        `${API_BASE_URL}/posts`,\n        { title, content, authorId: user.id },\n        {\n          headers: {\n            Authorization: `Bearer ${token}`,\n            'Content-Type': 'application/json',\n          },\n        }\n      );\n\n      // Success: Log response data\n      console.log(\"‚úÖ Post created successfully:\", response.data);\n      alert(\"‚úÖ Post created successfully!\");\n\n      setTitle('');\n      setContent('');\n      if (onPostCreated) onPostCreated(response.data);\n    } catch (error) {\n      // Debugging: Log full error object and response data\n      console.error(\"‚ùå Full Error Object:\", error);\n      console.error(\"‚ùå Error Response:\", error.response);\n\n      alert(\n        `‚ùå Failed to create post: ${\n          error.response?.data?.message || error.message || \"Unknown error\"\n        }`\n      );\n    }\n  };\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <h3>Create a New Post</h3>\n      <div>\n        <label>Title:</label>\n        <input\n          type=\"text\"\n          value={title}\n          onChange={(e) => setTitle(e.target.value)}\n          required\n        />\n      </div>\n      <div>\n        <label>Content:</label>\n        <Editor\n          apiKey={TINYMCE_API_KEY}\n          value={content}\n          onEditorChange={(newContent) => setContent(newContent)}\n          init={{\n            height: 300,\n            menubar: false,\n            plugins: 'link image code',\n            toolbar:\n              'undo redo | formatselect | bold italic | alignleft aligncenter alignright | code',\n          }}\n        />\n      </div>\n      <button type=\"submit\">Create Post</button>\n    </form>\n  );\n};\n\nexport default PostForm;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}