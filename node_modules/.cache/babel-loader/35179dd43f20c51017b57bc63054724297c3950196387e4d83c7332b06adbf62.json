{"ast":null,"code":"var _jsxFileName = \"/Users/drnamuene/Documents/Training/Odin Project/Notes/Node/Projects/blog_app/blog-management/src/components/PostList.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport CommentList from './CommentList';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_URL = 'http://localhost:3000/posts';\nconst PostList = ({\n  newPost\n}) => {\n  _s();\n  const [posts, setPosts] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const fetchPosts = async () => {\n    try {\n      console.log('Fetching posts from:', API_URL);\n      const response = await axios.get(API_URL);\n      console.log('Fetched posts:', response.data);\n      setPosts(response.data);\n    } catch (error) {\n      console.error('Error fetching posts:', error.message);\n      setError(`Failed to fetch posts: ${error.message}`);\n    } finally {\n      setLoading(false);\n    }\n  };\n  useEffect(() => {\n    fetchPosts();\n  }, [newPost]); // Ensure list updates when new post is created\n\n  const togglePublishStatus = async (postId, published) => {\n    try {\n      await axios.put(`${API_URL}/${postId}`, {\n        published: !published\n      });\n      setPosts(prevPosts => prevPosts.map(post => post.id === postId ? {\n        ...post,\n        published: !published\n      } : post));\n    } catch (error) {\n      console.error('Error updating post:', error);\n      alert('Failed to update post status.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"All Posts\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), loading ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading posts...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }, this) : error ? /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: 'red'\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }, this) : posts.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No posts found.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }, this) : posts.map(post => /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        border: '1px solid #ccc',\n        padding: '10px',\n        margin: '10px 0',\n        borderRadius: '8px',\n        boxShadow: '2px 2px 10px rgba(0, 0, 0, 0.1)'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: post.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: post.content\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Author:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 15\n        }, this), \" \", post.authorId, \" |\", ' ', /*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Status:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 15\n        }, this), ' ', /*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            color: post.published ? 'green' : 'red',\n            fontWeight: 'bold'\n          },\n          children: post.published ? 'Published' : 'Unpublished'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => togglePublishStatus(post.id, post.published),\n        style: {\n          backgroundColor: post.published ? 'red' : 'green',\n          color: 'white',\n          border: 'none',\n          padding: '8px 12px',\n          borderRadius: '5px',\n          cursor: 'pointer',\n          marginBottom: '10px'\n        },\n        children: post.published ? 'Unpublish' : 'Publish'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(CommentList, {\n        postId: post.id\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 13\n      }, this)]\n    }, post.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 11\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n};\n_s(PostList, \"FFSFm1bVdM1s2gLh8ffGbsIvlRY=\");\n_c = PostList;\nexport default PostList;\nvar _c;\n$RefreshReg$(_c, \"PostList\");","map":{"version":3,"names":["React","useEffect","useState","axios","CommentList","jsxDEV","_jsxDEV","API_URL","PostList","newPost","_s","posts","setPosts","loading","setLoading","error","setError","fetchPosts","console","log","response","get","data","message","togglePublishStatus","postId","published","put","prevPosts","map","post","id","alert","children","fileName","_jsxFileName","lineNumber","columnNumber","style","color","length","border","padding","margin","borderRadius","boxShadow","title","content","authorId","fontWeight","onClick","backgroundColor","cursor","marginBottom","_c","$RefreshReg$"],"sources":["/Users/drnamuene/Documents/Training/Odin Project/Notes/Node/Projects/blog_app/blog-management/src/components/PostList.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport CommentList from './CommentList';\n\nconst API_URL = 'http://localhost:3000/posts';\n\nconst PostList = ({ newPost }) => {\n  const [posts, setPosts] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  const fetchPosts = async () => {\n    try {\n      console.log('Fetching posts from:', API_URL);\n      const response = await axios.get(API_URL);\n      console.log('Fetched posts:', response.data);\n      setPosts(response.data);\n    } catch (error) {\n      console.error('Error fetching posts:', error.message);\n      setError(`Failed to fetch posts: ${error.message}`);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  useEffect(() => {\n    fetchPosts();\n  }, [newPost]); // Ensure list updates when new post is created\n\n  const togglePublishStatus = async (postId, published) => {\n    try {\n      await axios.put(`${API_URL}/${postId}`, { published: !published });\n\n      setPosts((prevPosts) =>\n        prevPosts.map((post) =>\n          post.id === postId ? { ...post, published: !published } : post\n        )\n      );\n    } catch (error) {\n      console.error('Error updating post:', error);\n      alert('Failed to update post status.');\n    }\n  };\n\n  return (\n    <div>\n      <h2>All Posts</h2>\n      {loading ? (\n        <p>Loading posts...</p>\n      ) : error ? (\n        <p style={{ color: 'red' }}>{error}</p>\n      ) : posts.length === 0 ? (\n        <p>No posts found.</p>\n      ) : (\n        posts.map((post) => (\n          <div\n            key={post.id}\n            style={{\n              border: '1px solid #ccc',\n              padding: '10px',\n              margin: '10px 0',\n              borderRadius: '8px',\n              boxShadow: '2px 2px 10px rgba(0, 0, 0, 0.1)',\n            }}\n          >\n            <h3>{post.title}</h3>\n            <p>{post.content}</p>\n            <p>\n              <strong>Author:</strong> {post.authorId} |{' '}\n              <strong>Status:</strong>{' '}\n              <span style={{ color: post.published ? 'green' : 'red', fontWeight: 'bold' }}>\n                {post.published ? 'Published' : 'Unpublished'}\n              </span>\n            </p>\n            <button\n              onClick={() => togglePublishStatus(post.id, post.published)}\n              style={{\n                backgroundColor: post.published ? 'red' : 'green',\n                color: 'white',\n                border: 'none',\n                padding: '8px 12px',\n                borderRadius: '5px',\n                cursor: 'pointer',\n                marginBottom: '10px',\n              }}\n            >\n              {post.published ? 'Unpublish' : 'Publish'}\n            </button>\n            <CommentList postId={post.id} />\n          </div>\n        ))\n      )}\n    </div>\n  );\n};\n\nexport default PostList;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}