{"ast":null,"code":"var _jsxFileName = \"/Users/drnamuene/Documents/Training/Odin Project/Notes/Node/Projects/blog_app/blog-management/src/components/PostList.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useContext, useEffect } from 'react';\nimport axios from 'axios';\nimport CommentList from './CommentList';\nimport AuthContext from '../context/AuthContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_BASE_URL = process.env.REACT_APP_API_BASE_URL;\nconst PostList = ({\n  posts = [],\n  onPostUpdated,\n  onPostDeleted\n}) => {\n  _s();\n  const {\n    token\n  } = useContext(AuthContext);\n  const [expandedPosts, setExpandedPosts] = useState([]);\n  const [editingPost, setEditingPost] = useState(null);\n  const [editValues, setEditValues] = useState({\n    title: '',\n    content: ''\n  });\n  const [postList, setPostList] = useState(posts);\n  useEffect(() => {\n    setPostList(posts); // Sync initial posts prop with local state\n  }, [posts]);\n\n  // Callback to handle the addition of a new post\n  const handleNewPost = newPost => {\n    setPostList(prevPosts => [newPost, ...prevPosts]); // Add new post at the top of the list\n  };\n\n  // Toggle published/unpublished status\n  const togglePublishStatus = async (postId, published) => {\n    try {\n      const response = await axios.put(`${API_BASE_URL}/posts/${postId}`, {\n        published: !published\n      }, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      if (onPostUpdated) {\n        onPostUpdated(postId, response.data);\n      }\n    } catch (error) {\n      console.error('Error updating post:', error);\n      alert('Failed to update post status.');\n    }\n  };\n\n  // Other event handlers remain unchanged...\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"All Posts\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), postList.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No posts found.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }, this) : postList.map(post => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"post-card\"\n    }, post.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 11\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n};\n_s(PostList, \"6qo631BFOLlITz98XGCcqCuvEwE=\");\n_c = PostList;\nexport default PostList;\nvar _c;\n$RefreshReg$(_c, \"PostList\");","map":{"version":3,"names":["React","useState","useContext","useEffect","axios","CommentList","AuthContext","jsxDEV","_jsxDEV","API_BASE_URL","process","env","REACT_APP_API_BASE_URL","PostList","posts","onPostUpdated","onPostDeleted","_s","token","expandedPosts","setExpandedPosts","editingPost","setEditingPost","editValues","setEditValues","title","content","postList","setPostList","handleNewPost","newPost","prevPosts","togglePublishStatus","postId","published","response","put","headers","Authorization","data","error","console","alert","children","fileName","_jsxFileName","lineNumber","columnNumber","length","map","post","className","id","_c","$RefreshReg$"],"sources":["/Users/drnamuene/Documents/Training/Odin Project/Notes/Node/Projects/blog_app/blog-management/src/components/PostList.js"],"sourcesContent":["import React, { useState, useContext, useEffect } from 'react';\nimport axios from 'axios';\nimport CommentList from './CommentList';\nimport AuthContext from '../context/AuthContext';\n\nconst API_BASE_URL = process.env.REACT_APP_API_BASE_URL;\n\nconst PostList = ({ posts = [], onPostUpdated, onPostDeleted }) => {\n  const { token } = useContext(AuthContext);\n  const [expandedPosts, setExpandedPosts] = useState([]);\n  const [editingPost, setEditingPost] = useState(null);\n  const [editValues, setEditValues] = useState({ title: '', content: '' });\n  const [postList, setPostList] = useState(posts);\n\n  useEffect(() => {\n    setPostList(posts);  // Sync initial posts prop with local state\n  }, [posts]);\n\n  // Callback to handle the addition of a new post\n  const handleNewPost = (newPost) => {\n    setPostList((prevPosts) => [newPost, ...prevPosts]);  // Add new post at the top of the list\n  };\n\n  // Toggle published/unpublished status\n  const togglePublishStatus = async (postId, published) => {\n    try {\n      const response = await axios.put(\n        `${API_BASE_URL}/posts/${postId}`,\n        { published: !published },\n        { headers: { Authorization: `Bearer ${token}` } }\n      );\n      if (onPostUpdated) {\n        onPostUpdated(postId, response.data);\n      }\n    } catch (error) {\n      console.error('Error updating post:', error);\n      alert('Failed to update post status.');\n    }\n  };\n\n  // Other event handlers remain unchanged...\n\n  return (\n    <div>\n      <h2>All Posts</h2>\n      {postList.length === 0 ? (\n        <p>No posts found.</p>\n      ) : (\n        postList.map((post) => (\n          <div key={post.id} className=\"post-card\">\n            {/* Render post content, edit, delete, etc. */}\n          </div>\n        ))\n      )}\n    </div>\n  );\n};\n\nexport default PostList;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,UAAU,EAAEC,SAAS,QAAQ,OAAO;AAC9D,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,WAAW,MAAM,eAAe;AACvC,OAAOC,WAAW,MAAM,wBAAwB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEjD,MAAMC,YAAY,GAAGC,OAAO,CAACC,GAAG,CAACC,sBAAsB;AAEvD,MAAMC,QAAQ,GAAGA,CAAC;EAAEC,KAAK,GAAG,EAAE;EAAEC,aAAa;EAAEC;AAAc,CAAC,KAAK;EAAAC,EAAA;EACjE,MAAM;IAAEC;EAAM,CAAC,GAAGhB,UAAU,CAACI,WAAW,CAAC;EACzC,MAAM,CAACa,aAAa,EAAEC,gBAAgB,CAAC,GAAGnB,QAAQ,CAAC,EAAE,CAAC;EACtD,MAAM,CAACoB,WAAW,EAAEC,cAAc,CAAC,GAAGrB,QAAQ,CAAC,IAAI,CAAC;EACpD,MAAM,CAACsB,UAAU,EAAEC,aAAa,CAAC,GAAGvB,QAAQ,CAAC;IAAEwB,KAAK,EAAE,EAAE;IAAEC,OAAO,EAAE;EAAG,CAAC,CAAC;EACxE,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAG3B,QAAQ,CAACa,KAAK,CAAC;EAE/CX,SAAS,CAAC,MAAM;IACdyB,WAAW,CAACd,KAAK,CAAC,CAAC,CAAE;EACvB,CAAC,EAAE,CAACA,KAAK,CAAC,CAAC;;EAEX;EACA,MAAMe,aAAa,GAAIC,OAAO,IAAK;IACjCF,WAAW,CAAEG,SAAS,IAAK,CAACD,OAAO,EAAE,GAAGC,SAAS,CAAC,CAAC,CAAC,CAAE;EACxD,CAAC;;EAED;EACA,MAAMC,mBAAmB,GAAG,MAAAA,CAAOC,MAAM,EAAEC,SAAS,KAAK;IACvD,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAM/B,KAAK,CAACgC,GAAG,CAC9B,GAAG3B,YAAY,UAAUwB,MAAM,EAAE,EACjC;QAAEC,SAAS,EAAE,CAACA;MAAU,CAAC,EACzB;QAAEG,OAAO,EAAE;UAAEC,aAAa,EAAE,UAAUpB,KAAK;QAAG;MAAE,CAClD,CAAC;MACD,IAAIH,aAAa,EAAE;QACjBA,aAAa,CAACkB,MAAM,EAAEE,QAAQ,CAACI,IAAI,CAAC;MACtC;IACF,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;MAC5CE,KAAK,CAAC,+BAA+B,CAAC;IACxC;EACF,CAAC;;EAED;;EAEA,oBACElC,OAAA;IAAAmC,QAAA,gBACEnC,OAAA;MAAAmC,QAAA,EAAI;IAAS;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EACjBpB,QAAQ,CAACqB,MAAM,KAAK,CAAC,gBACpBxC,OAAA;MAAAmC,QAAA,EAAG;IAAe;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,GAEtBpB,QAAQ,CAACsB,GAAG,CAAEC,IAAI,iBAChB1C,OAAA;MAAmB2C,SAAS,EAAC;IAAW,GAA9BD,IAAI,CAACE,EAAE;MAAAR,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAEZ,CACN,CACF;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAAC9B,EAAA,CAjDIJ,QAAQ;AAAAwC,EAAA,GAARxC,QAAQ;AAmDd,eAAeA,QAAQ;AAAC,IAAAwC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}