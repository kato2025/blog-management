{"ast":null,"code":"var _jsxFileName = \"/Users/drnamuene/Documents/Training/Odin Project/Notes/Node/Projects/blog_app/blog-management/src/components/PostForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useContext } from 'react';\nimport axios from 'axios';\nimport { Editor } from '@tinymce/tinymce-react';\nimport AuthContext from '../context/AuthContext';\nimport Navbar from \"./styles/Navbar.css\"; // Import the Navbar component\nimport \"../App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const {\n    token,\n    user\n  } = useContext(AuthContext);\n  const [posts, setPosts] = useState([]);\n  const [showForm, setShowForm] = useState(false); // state to toggle PostForm\n\n  useEffect(() => {\n    const fetchPosts = async () => {\n      if (!token) return; // Wait until token is available\n      try {\n        const response = await axios.get(`${process.env.REACT_APP_API_BASE_URL}/posts`, {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        setPosts(response.data);\n      } catch (error) {\n        console.error(\"Error fetching posts:\", error);\n      }\n    };\n    fetchPosts();\n  }, [token]);\n\n  // Callback to update posts when a new post is created\n  const handlePostCreated = newPost => {\n    setPosts(prevPosts => [newPost, ...prevPosts]);\n    setShowForm(false); // Hide the form after a successful post creation\n  };\n\n  // Filter posts to show only those created by the logged-in user\n  const userPosts = user ? posts.filter(post => post.authorId === user.id) : [];\n  return /*#__PURE__*/_jsxDEV(Router, {\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Routes, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        path: \"/\",\n        element: /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Welcome to Blog Management\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 34\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/login\",\n        element: /*#__PURE__*/_jsxDEV(Login, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 39\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/register\",\n        element: /*#__PURE__*/_jsxDEV(Register, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 42\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/logout\",\n        element: /*#__PURE__*/_jsxDEV(Logout, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 40\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        element: /*#__PURE__*/_jsxDEV(ProtectedRoute, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 25\n        }, this),\n        children: /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/manage\",\n          element: /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n              children: \"Manage Posts\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => setShowForm(!showForm),\n              style: {\n                padding: \"10px 20px\",\n                marginBottom: \"20px\",\n                backgroundColor: \"var(--success-color)\",\n                color: \"#fff\",\n                border: \"none\",\n                borderRadius: \"var(--border-radius-base)\",\n                cursor: \"pointer\"\n              },\n              children: showForm ? \"Close Form\" : \"Create Post\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 17\n            }, this), showForm && /*#__PURE__*/_jsxDEV(PostForm, {\n              onPostCreated: handlePostCreated\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 30\n            }, this), /*#__PURE__*/_jsxDEV(PostList, {\n              posts: userPosts\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"*\",\n        element: /*#__PURE__*/_jsxDEV(Navigate, {\n          to: \"/\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 34\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"LpyVg1pnCTsCuvx8IjnAXtQTMOE=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useContext","axios","Editor","AuthContext","Navbar","jsxDEV","_jsxDEV","App","_s","token","user","posts","setPosts","showForm","setShowForm","useEffect","fetchPosts","response","get","process","env","REACT_APP_API_BASE_URL","headers","Authorization","data","error","console","handlePostCreated","newPost","prevPosts","userPosts","filter","post","authorId","id","Router","children","fileName","_jsxFileName","lineNumber","columnNumber","Routes","Route","path","element","Login","Register","Logout","ProtectedRoute","onClick","style","padding","marginBottom","backgroundColor","color","border","borderRadius","cursor","PostForm","onPostCreated","PostList","Navigate","to","_c","$RefreshReg$"],"sources":["/Users/drnamuene/Documents/Training/Odin Project/Notes/Node/Projects/blog_app/blog-management/src/components/PostForm.js"],"sourcesContent":["import React, { useState, useContext } from 'react';\nimport axios from 'axios';\nimport { Editor } from '@tinymce/tinymce-react';\nimport AuthContext from '../context/AuthContext';\nimport Navbar from \"./styles/Navbar.css\"; // Import the Navbar component\nimport \"../App.css\";\n\nfunction App() {\n  const { token, user } = useContext(AuthContext);\n  const [posts, setPosts] = useState([]);\n  const [showForm, setShowForm] = useState(false); // state to toggle PostForm\n\n  useEffect(() => {\n    const fetchPosts = async () => {\n      if (!token) return; // Wait until token is available\n      try {\n        const response = await axios.get(\n          `${process.env.REACT_APP_API_BASE_URL}/posts`,\n          {\n            headers: { Authorization: `Bearer ${token}` },\n          }\n        );\n        setPosts(response.data);\n      } catch (error) {\n        console.error(\"Error fetching posts:\", error);\n      }\n    };\n    fetchPosts();\n  }, [token]);\n\n  // Callback to update posts when a new post is created\n  const handlePostCreated = (newPost) => {\n    setPosts((prevPosts) => [newPost, ...prevPosts]);\n    setShowForm(false); // Hide the form after a successful post creation\n  };\n\n  // Filter posts to show only those created by the logged-in user\n  const userPosts = user ? posts.filter((post) => post.authorId === user.id) : [];\n\n  return (\n    <Router>\n      <Navbar />\n      <Routes>\n        <Route path=\"/\" element={<h1>Welcome to Blog Management</h1>} />\n        <Route path=\"/login\" element={<Login />} />\n        <Route path=\"/register\" element={<Register />} />\n        <Route path=\"/logout\" element={<Logout />} />\n\n        {/* Protected Routes */}\n        <Route element={<ProtectedRoute />}>\n          <Route\n            path=\"/manage\"\n            element={\n              <div>\n                <h1>Manage Posts</h1>\n                <button \n                  onClick={() => setShowForm(!showForm)}\n                  style={{\n                    padding: \"10px 20px\",\n                    marginBottom: \"20px\",\n                    backgroundColor: \"var(--success-color)\",\n                    color: \"#fff\",\n                    border: \"none\",\n                    borderRadius: \"var(--border-radius-base)\",\n                    cursor: \"pointer\"\n                  }}\n                >\n                  {showForm ? \"Close Form\" : \"Create Post\"}\n                </button>\n                {showForm && <PostForm onPostCreated={handlePostCreated} />}\n                <PostList posts={userPosts} />\n              </div>\n            }\n          />\n        </Route>\n\n        <Route path=\"*\" element={<Navigate to=\"/\" />} />\n      </Routes>\n    </Router>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,UAAU,QAAQ,OAAO;AACnD,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,MAAM,QAAQ,wBAAwB;AAC/C,OAAOC,WAAW,MAAM,wBAAwB;AAChD,OAAOC,MAAM,MAAM,qBAAqB,CAAC,CAAC;AAC1C,OAAO,YAAY;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEpB,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM;IAAEC,KAAK;IAAEC;EAAK,CAAC,GAAGV,UAAU,CAACG,WAAW,CAAC;EAC/C,MAAM,CAACQ,KAAK,EAAEC,QAAQ,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACc,QAAQ,EAAEC,WAAW,CAAC,GAAGf,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC;;EAEjDgB,SAAS,CAAC,MAAM;IACd,MAAMC,UAAU,GAAG,MAAAA,CAAA,KAAY;MAC7B,IAAI,CAACP,KAAK,EAAE,OAAO,CAAC;MACpB,IAAI;QACF,MAAMQ,QAAQ,GAAG,MAAMhB,KAAK,CAACiB,GAAG,CAC9B,GAAGC,OAAO,CAACC,GAAG,CAACC,sBAAsB,QAAQ,EAC7C;UACEC,OAAO,EAAE;YAAEC,aAAa,EAAE,UAAUd,KAAK;UAAG;QAC9C,CACF,CAAC;QACDG,QAAQ,CAACK,QAAQ,CAACO,IAAI,CAAC;MACzB,CAAC,CAAC,OAAOC,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;MAC/C;IACF,CAAC;IACDT,UAAU,CAAC,CAAC;EACd,CAAC,EAAE,CAACP,KAAK,CAAC,CAAC;;EAEX;EACA,MAAMkB,iBAAiB,GAAIC,OAAO,IAAK;IACrChB,QAAQ,CAAEiB,SAAS,IAAK,CAACD,OAAO,EAAE,GAAGC,SAAS,CAAC,CAAC;IAChDf,WAAW,CAAC,KAAK,CAAC,CAAC,CAAC;EACtB,CAAC;;EAED;EACA,MAAMgB,SAAS,GAAGpB,IAAI,GAAGC,KAAK,CAACoB,MAAM,CAAEC,IAAI,IAAKA,IAAI,CAACC,QAAQ,KAAKvB,IAAI,CAACwB,EAAE,CAAC,GAAG,EAAE;EAE/E,oBACE5B,OAAA,CAAC6B,MAAM;IAAAC,QAAA,gBACL9B,OAAA,CAACF,MAAM;MAAAiC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACVlC,OAAA,CAACmC,MAAM;MAAAL,QAAA,gBACL9B,OAAA,CAACoC,KAAK;QAACC,IAAI,EAAC,GAAG;QAACC,OAAO,eAAEtC,OAAA;UAAA8B,QAAA,EAAI;QAA0B;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI;MAAE;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAChElC,OAAA,CAACoC,KAAK;QAACC,IAAI,EAAC,QAAQ;QAACC,OAAO,eAAEtC,OAAA,CAACuC,KAAK;UAAAR,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAE;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAC3ClC,OAAA,CAACoC,KAAK;QAACC,IAAI,EAAC,WAAW;QAACC,OAAO,eAAEtC,OAAA,CAACwC,QAAQ;UAAAT,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAE;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACjDlC,OAAA,CAACoC,KAAK;QAACC,IAAI,EAAC,SAAS;QAACC,OAAO,eAAEtC,OAAA,CAACyC,MAAM;UAAAV,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAE;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAG7ClC,OAAA,CAACoC,KAAK;QAACE,OAAO,eAAEtC,OAAA,CAAC0C,cAAc;UAAAX,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAE;QAAAJ,QAAA,eACjC9B,OAAA,CAACoC,KAAK;UACJC,IAAI,EAAC,SAAS;UACdC,OAAO,eACLtC,OAAA;YAAA8B,QAAA,gBACE9B,OAAA;cAAA8B,QAAA,EAAI;YAAY;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC,eACrBlC,OAAA;cACE2C,OAAO,EAAEA,CAAA,KAAMnC,WAAW,CAAC,CAACD,QAAQ,CAAE;cACtCqC,KAAK,EAAE;gBACLC,OAAO,EAAE,WAAW;gBACpBC,YAAY,EAAE,MAAM;gBACpBC,eAAe,EAAE,sBAAsB;gBACvCC,KAAK,EAAE,MAAM;gBACbC,MAAM,EAAE,MAAM;gBACdC,YAAY,EAAE,2BAA2B;gBACzCC,MAAM,EAAE;cACV,CAAE;cAAArB,QAAA,EAEDvB,QAAQ,GAAG,YAAY,GAAG;YAAa;cAAAwB,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAClC,CAAC,EACR3B,QAAQ,iBAAIP,OAAA,CAACoD,QAAQ;cAACC,aAAa,EAAEhC;YAAkB;cAAAU,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE,CAAC,eAC3DlC,OAAA,CAACsD,QAAQ;cAACjD,KAAK,EAAEmB;YAAU;cAAAO,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC3B;QACN;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACF;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACG,CAAC,eAERlC,OAAA,CAACoC,KAAK;QAACC,IAAI,EAAC,GAAG;QAACC,OAAO,eAAEtC,OAAA,CAACuD,QAAQ;UAACC,EAAE,EAAC;QAAG;UAAAzB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAE;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC1C,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEb;AAAChC,EAAA,CAzEQD,GAAG;AAAAwD,EAAA,GAAHxD,GAAG;AA2EZ,eAAeA,GAAG;AAAC,IAAAwD,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}