{"ast":null,"code":"var _jsxFileName = \"/Users/drnamuene/Documents/Training/Odin Project/Notes/Node/Projects/blog_app/blog-management/src/components/PostList.js\";\nimport React from 'react';\nimport axios from 'axios';\nimport CommentList from './CommentList';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_BASE_URL = process.env.REACT_APP_API_BASE_URL;\nconst PostList = ({\n  posts,\n  onPostUpdated\n}) => {\n  const togglePublishStatus = async (postId, published) => {\n    try {\n      await axios.put(`${API_BASE_URL}/posts/${postId}`, {\n        published: !published\n      });\n      onPostUpdated(postId, !published);\n    } catch (error) {\n      console.error('Error updating post:', error);\n      alert('Failed to update post status.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"All Posts\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this), posts.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No posts found.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 9\n    }, this) : posts.map(post => /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        border: '1px solid #ccc',\n        padding: '10px',\n        margin: '10px 0',\n        borderRadius: '8px',\n        boxShadow: '2px 2px 10px rgba(0, 0, 0, 0.1)'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: post.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        dangerouslySetInnerHTML: {\n          __html: post.content\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Author:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 15\n        }, this), \" \", post.authorId, \" | \", /*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Status:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 58\n        }, this), ' ', /*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            color: post.published ? 'green' : 'red',\n            fontWeight: 'bold'\n          },\n          children: post.published ? 'Published' : 'Unpublished'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => togglePublishStatus(post.id, post.published),\n        style: {\n          backgroundColor: post.published ? 'red' : 'green',\n          color: 'white',\n          border: 'none',\n          padding: '8px 12px',\n          borderRadius: '5px',\n          cursor: 'pointer',\n          marginBottom: '10px'\n        },\n        children: post.published ? 'Unpublish' : 'Publish'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(CommentList, {\n        postId: post.id\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 13\n      }, this)]\n    }, post.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 11\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }, this);\n};\n_c = PostList;\nexport default PostList;\nvar _c;\n$RefreshReg$(_c, \"PostList\");","map":{"version":3,"names":["React","axios","CommentList","jsxDEV","_jsxDEV","API_BASE_URL","process","env","REACT_APP_API_BASE_URL","PostList","posts","onPostUpdated","togglePublishStatus","postId","published","put","error","console","alert","children","fileName","_jsxFileName","lineNumber","columnNumber","length","map","post","style","border","padding","margin","borderRadius","boxShadow","title","dangerouslySetInnerHTML","__html","content","authorId","color","fontWeight","onClick","id","backgroundColor","cursor","marginBottom","_c","$RefreshReg$"],"sources":["/Users/drnamuene/Documents/Training/Odin Project/Notes/Node/Projects/blog_app/blog-management/src/components/PostList.js"],"sourcesContent":["import React from 'react';\nimport axios from 'axios';\nimport CommentList from './CommentList';\n\nconst API_BASE_URL = process.env.REACT_APP_API_BASE_URL;\n\nconst PostList = ({ posts, onPostUpdated }) => {\n  const togglePublishStatus = async (postId, published) => {\n    try {\n      await axios.put(`${API_BASE_URL}/posts/${postId}`, { published: !published });\n      onPostUpdated(postId, !published);\n    } catch (error) {\n      console.error('Error updating post:', error);\n      alert('Failed to update post status.');\n    }\n  };\n\n  return (\n    <div>\n      <h2>All Posts</h2>\n      {posts.length === 0 ? (\n        <p>No posts found.</p>\n      ) : (\n        posts.map((post) => (\n          <div key={post.id} style={{ border: '1px solid #ccc', padding: '10px', margin: '10px 0', borderRadius: '8px', boxShadow: '2px 2px 10px rgba(0, 0, 0, 0.1)' }}>\n            <h3>{post.title}</h3>\n            <div dangerouslySetInnerHTML={{ __html: post.content }} />\n            <p>\n              <strong>Author:</strong> {post.authorId} | <strong>Status:</strong>{' '}\n              <span style={{ color: post.published ? 'green' : 'red', fontWeight: 'bold' }}>\n                {post.published ? 'Published' : 'Unpublished'}\n              </span>\n            </p>\n            <button\n              onClick={() => togglePublishStatus(post.id, post.published)}\n              style={{ backgroundColor: post.published ? 'red' : 'green', color: 'white', border: 'none', padding: '8px 12px', borderRadius: '5px', cursor: 'pointer', marginBottom: '10px' }}\n            >\n              {post.published ? 'Unpublish' : 'Publish'}\n            </button>\n            <CommentList postId={post.id} />\n          </div>\n        ))\n      )}\n    </div>\n  );\n};\n\nexport default PostList;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}