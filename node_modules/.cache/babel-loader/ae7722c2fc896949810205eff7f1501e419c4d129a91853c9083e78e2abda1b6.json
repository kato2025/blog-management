{"ast":null,"code":"var _jsxFileName = \"/Users/drnamuene/Documents/Training/Odin Project/Notes/Node/Projects/blog_app/blog-management/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport PostList from './components/PostList';\nimport PostForm from './components/PostForm';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_BASE_URL = 'http://localhost:5000'; // Update port to match your backend\n\nfunction App() {\n  _s();\n  const [posts, setPosts] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    const fetchPosts = async () => {\n      try {\n        const response = await axios.get(`${API_BASE_URL}/posts`);\n        setPosts(response.data);\n        setError(null);\n      } catch (error) {\n        var _error$response, _error$response$data;\n        setError(`Failed to fetch posts: ${((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.message) || error.message}`);\n        console.error('Full error:', error);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchPosts();\n  }, []);\n  const handlePostCreated = newPost => {\n    setPosts(prevPosts => [...prevPosts, newPost]);\n  };\n  const handlePostUpdated = (postId, published) => {\n    setPosts(prevPosts => prevPosts.map(post => post.id === postId ? {\n      ...post,\n      published\n    } : post));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Blog Management\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(PostForm, {\n      onPostCreated: handlePostCreated\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), loading ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading posts...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }, this) : error ? /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: 'red'\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(PostList, {\n      posts: posts,\n      onPostUpdated: handlePostUpdated\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"FFSFm1bVdM1s2gLh8ffGbsIvlRY=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","axios","PostList","PostForm","jsxDEV","_jsxDEV","API_BASE_URL","App","_s","posts","setPosts","loading","setLoading","error","setError","fetchPosts","response","get","data","_error$response","_error$response$data","message","console","handlePostCreated","newPost","prevPosts","handlePostUpdated","postId","published","map","post","id","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onPostCreated","style","color","onPostUpdated","_c","$RefreshReg$"],"sources":["/Users/drnamuene/Documents/Training/Odin Project/Notes/Node/Projects/blog_app/blog-management/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport PostList from './components/PostList';\nimport PostForm from './components/PostForm';\nconst API_BASE_URL = 'http://localhost:5000'; // Update port to match your backend\n\nfunction App() {\n  const [posts, setPosts] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    const fetchPosts = async () => {\n      try {\n        const response = await axios.get(`${API_BASE_URL}/posts`);\n        setPosts(response.data);\n        setError(null);\n      } catch (error) {\n        setError(`Failed to fetch posts: ${error.response?.data?.message || error.message}`);\n        console.error('Full error:', error);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    fetchPosts();\n  }, []);\n\n  const handlePostCreated = (newPost) => {\n    setPosts((prevPosts) => [...prevPosts, newPost]);\n  };\n\n  const handlePostUpdated = (postId, published) => {\n    setPosts((prevPosts) =>\n      prevPosts.map((post) =>\n        post.id === postId ? { ...post, published } : post\n      )\n    );\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Blog Management</h1>\n      <PostForm onPostCreated={handlePostCreated} />\n      \n      {loading ? (\n        <p>Loading posts...</p>\n      ) : error ? (\n        <p style={{ color: 'red' }}>{error}</p>\n      ) : (\n        <PostList posts={posts} onPostUpdated={handlePostUpdated} />\n      )}\n    </div>\n  );\n}\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}