{"ast":null,"code":"var _jsxFileName = \"/Users/drnamuene/Documents/Training/Odin Project/Notes/Node/Projects/blog_app/blog-management/src/components/CommentList.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState, useContext } from 'react';\nimport axios from 'axios';\nimport AuthContext from '../context/AuthContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_BASE_URL = process.env.REACT_APP_API_BASE_URL;\nconst CommentList = ({\n  postId\n}) => {\n  _s();\n  const {\n    token\n  } = useContext(AuthContext);\n  const [comments, setComments] = useState([]);\n  useEffect(() => {\n    const fetchComments = async () => {\n      try {\n        // Include the token in the request header\n        const response = await axios.get(`${API_BASE_URL}/comments`, {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        // Filter only the comments that belong to the current post\n        const postComments = response.data.filter(comment => comment.postId === postId);\n        setComments(postComments);\n      } catch (error) {\n        console.error('Error fetching comments:', error);\n      }\n    };\n    fetchComments();\n  }, [postId, token]);\n  const deleteComment = async commentId => {\n    const confirmDelete = window.confirm('Are you sure you want to delete this comment? This action cannot be undone.');\n    if (!confirmDelete) return;\n    try {\n      await axios.delete(`${API_BASE_URL}/comments/${commentId}`, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      setComments(comments.filter(comment => comment.id !== commentId));\n    } catch (error) {\n      console.error('Error deleting comment:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"comment-list\",\n    children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n      children: \"Comments\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), comments.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No comments found.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }, this) : comments.map(comment => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"comment\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: comment.content\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"By:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 15\n        }, this), \" \", comment.username || 'Anonymous', \" |\", ' ', /*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"On:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 15\n        }, this), ' ', comment.created_at ? new Date(comment.created_at).toLocaleString() : 'Unknown Date']\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => deleteComment(comment.id),\n        className: \"btn btn-delete\",\n        children: \"Delete\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 13\n      }, this)]\n    }, comment.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 11\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n};\n_s(CommentList, \"3tI1vVVtT0x5cpWniH5sff7x3jM=\");\n_c = CommentList;\nexport default CommentList;\nvar _c;\n$RefreshReg$(_c, \"CommentList\");","map":{"version":3,"names":["React","useEffect","useState","useContext","axios","AuthContext","jsxDEV","_jsxDEV","API_BASE_URL","process","env","REACT_APP_API_BASE_URL","CommentList","postId","_s","token","comments","setComments","fetchComments","response","get","headers","Authorization","postComments","data","filter","comment","error","console","deleteComment","commentId","confirmDelete","window","confirm","delete","id","className","children","fileName","_jsxFileName","lineNumber","columnNumber","length","map","content","username","created_at","Date","toLocaleString","onClick","_c","$RefreshReg$"],"sources":["/Users/drnamuene/Documents/Training/Odin Project/Notes/Node/Projects/blog_app/blog-management/src/components/CommentList.js"],"sourcesContent":["import React, { useEffect, useState, useContext } from 'react';\nimport axios from 'axios';\nimport AuthContext from '../context/AuthContext';\n\nconst API_BASE_URL = process.env.REACT_APP_API_BASE_URL;\n\nconst CommentList = ({ postId }) => {\n  const { token } = useContext(AuthContext);\n  const [comments, setComments] = useState([]);\n\n  useEffect(() => {\n    const fetchComments = async () => {\n      try {\n        // Include the token in the request header\n        const response = await axios.get(`${API_BASE_URL}/comments`, {\n          headers: { Authorization: `Bearer ${token}` },\n        });\n        // Filter only the comments that belong to the current post\n        const postComments = response.data.filter(\n          (comment) => comment.postId === postId\n        );\n        setComments(postComments);\n      } catch (error) {\n        console.error('Error fetching comments:', error);\n      }\n    };\n\n    fetchComments();\n  }, [postId, token]);\n\n  const deleteComment = async (commentId) => {\n    const confirmDelete = window.confirm(\n      'Are you sure you want to delete this comment? This action cannot be undone.'\n    );\n    if (!confirmDelete) return;\n\n    try {\n      await axios.delete(`${API_BASE_URL}/comments/${commentId}`, {\n        headers: { Authorization: `Bearer ${token}` },\n      });\n      setComments(comments.filter((comment) => comment.id !== commentId));\n    } catch (error) {\n      console.error('Error deleting comment:', error);\n    }\n  };\n\n  return (\n    <div className=\"comment-list\">\n      <h4>Comments</h4>\n      {comments.length === 0 ? (\n        <p>No comments found.</p>\n      ) : (\n        comments.map((comment) => (\n          <div key={comment.id} className=\"comment\">\n            <p>{comment.content}</p>\n            <p>\n              <strong>By:</strong> {comment.username || 'Anonymous'} |{' '}\n              <strong>On:</strong>{' '}\n              {comment.created_at\n                ? new Date(comment.created_at).toLocaleString()\n                : 'Unknown Date'}\n            </p>\n            <button\n              onClick={() => deleteComment(comment.id)}\n              className=\"btn btn-delete\"\n            >\n              Delete\n            </button>\n          </div>\n        ))\n      )}\n    </div>\n  );\n};\n\nexport default CommentList;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}