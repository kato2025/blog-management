{"ast":null,"code":"var _jsxFileName = \"/Users/drnamuene/Documents/Training/Odin Project/Notes/Node/Projects/blog_app/blog-management/src/components/PostList.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useContext } from 'react';\nimport axios from 'axios';\nimport CommentList from './CommentList';\nimport AuthContext from '../context/AuthContext';\nimport PostForm from './PostForm'; // Import PostForm to use it in the PostList\nimport \"../App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_BASE_URL = process.env.REACT_APP_API_BASE_URL;\nconst PostList = ({\n  onPostUpdated,\n  onPostDeleted\n}) => {\n  _s();\n  const {\n    token,\n    user\n  } = useContext(AuthContext);\n  const [posts, setPosts] = useState([]);\n  const [expandedPosts, setExpandedPosts] = useState([]);\n  const [editingPost, setEditingPost] = useState(null);\n  const [editValues, setEditValues] = useState({\n    title: '',\n    content: ''\n  });\n  const [isFormVisible, setIsFormVisible] = useState(false); // Manage form visibility\n\n  // Update local posts if the initial posts prop changes\n  useEffect(() => {\n    const fetchPosts = async () => {\n      try {\n        const response = await axios.get(`${API_BASE_URL}/posts`, {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        setPosts(response.data.filter(post => post.authorId === user.id));\n      } catch (error) {\n        console.error('Error fetching posts:', error);\n      }\n    };\n    fetchPosts();\n  }, [token, user]);\n\n  // Toggle the visibility of the form.\n  const toggleForm = () => {\n    setIsFormVisible(!isFormVisible);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"All Posts\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: toggleForm,\n      className: \"btn create-post-btn\",\n      children: isFormVisible ? 'Cancel' : 'Create Post'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), isFormVisible && /*#__PURE__*/_jsxDEV(PostForm, {\n      onPostCreated: newPost => setPosts([newPost, ...posts])\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 25\n    }, this), posts.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No posts found.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }, this) : posts.map(post => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"post-card\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: post.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"post-date\",\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Date Posted:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 15\n        }, this), \" \", new Date(post.createdAt).toLocaleString()]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"post-content\",\n        dangerouslySetInnerHTML: {\n          __html: post.content.replace(/<\\/?p>/g, '')\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleEditClick(post),\n        className: \"btn btn-edit\",\n        children: \"Edit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleDelete(post.id),\n        className: \"btn btn-delete\",\n        children: \"Delete\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 13\n      }, this)]\n    }, post.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 11\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n};\n_s(PostList, \"H4XdIvKGTjTuqhpC0yOD94XpsI4=\");\n_c = PostList;\nexport default PostList;\nvar _c;\n$RefreshReg$(_c, \"PostList\");","map":{"version":3,"names":["React","useState","useEffect","useContext","axios","CommentList","AuthContext","PostForm","jsxDEV","_jsxDEV","API_BASE_URL","process","env","REACT_APP_API_BASE_URL","PostList","onPostUpdated","onPostDeleted","_s","token","user","posts","setPosts","expandedPosts","setExpandedPosts","editingPost","setEditingPost","editValues","setEditValues","title","content","isFormVisible","setIsFormVisible","fetchPosts","response","get","headers","Authorization","data","filter","post","authorId","id","error","console","toggleForm","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","onPostCreated","newPost","length","map","Date","createdAt","toLocaleString","dangerouslySetInnerHTML","__html","replace","handleEditClick","handleDelete","_c","$RefreshReg$"],"sources":["/Users/drnamuene/Documents/Training/Odin Project/Notes/Node/Projects/blog_app/blog-management/src/components/PostList.js"],"sourcesContent":["import React, { useState, useEffect, useContext } from 'react';\nimport axios from 'axios';\nimport CommentList from './CommentList';\nimport AuthContext from '../context/AuthContext';\nimport PostForm from './PostForm'; // Import PostForm to use it in the PostList\nimport \"../App.css\";\n\nconst API_BASE_URL = process.env.REACT_APP_API_BASE_URL;\n\nconst PostList = ({ onPostUpdated, onPostDeleted }) => {\n  const { token, user } = useContext(AuthContext);\n  const [posts, setPosts] = useState([]);\n  const [expandedPosts, setExpandedPosts] = useState([]);\n  const [editingPost, setEditingPost] = useState(null);\n  const [editValues, setEditValues] = useState({ title: '', content: '' });\n  const [isFormVisible, setIsFormVisible] = useState(false); // Manage form visibility\n\n  // Update local posts if the initial posts prop changes\n  useEffect(() => {\n    const fetchPosts = async () => {\n      try {\n        const response = await axios.get(`${API_BASE_URL}/posts`, {\n          headers: { Authorization: `Bearer ${token}` },\n        });\n        setPosts(response.data.filter(post => post.authorId === user.id));\n      } catch (error) {\n        console.error('Error fetching posts:', error);\n      }\n    };\n    fetchPosts();\n  }, [token, user]);\n\n  // Toggle the visibility of the form.\n  const toggleForm = () => {\n    setIsFormVisible(!isFormVisible);\n  };\n\n  return (\n    <div className='container'>\n      <h2>All Posts</h2>\n      {/* Add Create post button */}\n      <button onClick={toggleForm} className=\"btn create-post-btn\">\n        {isFormVisible ? 'Cancel' : 'Create Post'}\n      </button>\n\n      {/* Conditionally render PostForm */}\n      {isFormVisible && <PostForm onPostCreated={(newPost) => setPosts([newPost, ...posts])} />}\n\n      {posts.length === 0 ? (\n        <p>No posts found.</p>\n      ) : (\n        posts.map((post) => (\n          <div key={post.id} className=\"post-card\">\n            {/* Edit and delete logic */}\n            <h3>{post.title}</h3>\n            <p className=\"post-date\">\n              <strong>Date Posted:</strong> {new Date(post.createdAt).toLocaleString()}\n            </p>\n            <div\n              className=\"post-content\"\n              dangerouslySetInnerHTML={{ __html: post.content.replace(/<\\/?p>/g, '') }}\n            />\n            <button onClick={() => handleEditClick(post)} className=\"btn btn-edit\">\n              Edit\n            </button>\n            <button onClick={() => handleDelete(post.id)} className=\"btn btn-delete\">\n              Delete\n            </button>\n          </div>\n        ))\n      )}\n    </div>\n  );\n};\n\nexport default PostList;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}